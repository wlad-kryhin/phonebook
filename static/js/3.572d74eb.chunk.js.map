{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/PhoneList/PhoneList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/selectors.jsx","components/PhoneList/PhoneList.jsx","redux/operation.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","views/Contacts.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getFilterValue","state","contacts","filter","getItems","items","getList","normalizeFilter","toLocaleLowerCase","item","name","includes","getVisibleContacts","PhoneList","dispatch","useDispatch","list","useSelector","onDelete","id","action","axios","delete","then","catch","error","deleteContact","useEffect","setTimeout","get","data","className","s","map","number","list__item","text","color","button","type","onClick","ContactForm","useState","setName","setNumber","onSubmit","event","preventDefault","post","form","label","input","placeholder","onChange","currentTarget","pattern","required","Filter","e","target","Contacts"],"mappings":"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","file":"static/js/3.572d74eb.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhoneList_list__3AOs1\",\"list__item\":\"PhoneList_list__item__3adg4\",\"button\":\"PhoneList_button__XfxDA\",\"text\":\"PhoneList_text__18G31\",\"number\":\"PhoneList_number__39_nB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Krot\",\"label\":\"ContactForm_label__2JLVl\",\"input\":\"ContactForm_input__3hbUS\",\"button\":\"ContactForm_button__FojeJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__17sxO\",\"label\":\"Filter_label__1qvjN\"};","// import { createSelector } from \"reselect\";\r\nconst getVisibleContacts = (items, filter) => {\r\n  const normalizeFilter = filter.toLocaleLowerCase();\r\n\r\n  return items.filter((item) =>\r\n    item.name.toLocaleLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\nexport const getFilterValue = (state) => state.contacts.filter;\r\nexport const getItems = (state) => state.contacts.items;\r\n// export const getVisibleContacts = createSelector(\r\n//   [getItems, getFilterValue],\r\n//   (items, filter) => {\r\n//     const normalizeFilter = filter.toLocaleLowerCase();\r\n\r\n//     return items.filter((item) =>\r\n//       item.name.toLocaleLowerCase().includes(normalizeFilter),\r\n//     );\r\n//   },\r\n// );\r\nexport const getList = (state) =>\r\n  getVisibleContacts(state.contacts.items, state.contacts.filter);\r\n","// import PropTypes from \"prop-types\";\r\nimport s from \"./PhoneList.module.css\";\r\n// import * as action from \"../../redux/action\";\r\nimport { deleteContact, fetchItems } from \"../../redux/operation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getList } from \"../../redux/selectors\";\r\nimport { useEffect } from \"react\";\r\nimport { ImPhone, ImUser } from \"react-icons/im\";\r\n\r\nexport default function PhoneList() {\r\n  const dispatch = useDispatch();\r\n  const list = useSelector(getList);\r\n  const onDelete = (id) => dispatch(deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(fetchItems());\r\n    }, 100);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {list.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} className={s.list__item}>\r\n            <p className={s.text}>\r\n              <ImUser />\r\n              {name}\r\n            </p>\r\n            <p className={s.number}>\r\n              <ImPhone color=\"blue\" />\r\n              {number}\r\n            </p>\r\n            <div>\r\n              <button\r\n                className={s.button}\r\n                type=\"button\"\r\n                onClick={() => onDelete(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n// PhoneList.propTypes = {\r\n//   list: PropTypes.array,\r\n//   onDelete: PropTypes.func,\r\n// };\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { filter, items } = state.contacts;\r\n//   // const { tel, name } = list;\r\n//   // if (\r\n//   //   items.find((contact) => contact.name.toLowerCase() === name.toLowerCase())\r\n//   // ) {\r\n//   //   alert(`${name} is already in contacts.`);\r\n//   // }\r\n//   // if (items.find((contact) => contact.tel === tel)) {\r\n//   //   alert(`${tel} is already in contacts.`);\r\n//   // }\r\n//   const visibleItems = getVisibleContacts(items, filter);\r\n\r\n//   return {\r\n//     list: visibleItems,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onDelete: (id) => dispatch(action.deleteItem(id)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(PhoneList);\r\n","import * as action from \"./action\";\r\nimport axios from \"axios\";\r\n// import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// const fetchItems = createAsyncThunk(\r\n//   \"contacts\",\r\n//   async (_, { rejectWithValue }) => {\r\n//     try {\r\n//       const { data } = axios.get(\"/contacts\");\r\n//       return data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   },\r\n// );\r\n\r\n// const addContacts = createAsyncThunk(\r\n//   \"contacts/addContacts\",\r\n//   async ({ name, tel }, { rejectWithValue }) => {\r\n//     try {\r\n//       const item = {\r\n//         name,\r\n//         tel,\r\n//       };\r\n//       const { data } = axios.post(\"/contacts\", item);\r\n//       return data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   },\r\n// );\r\n\r\n// const deleteContact = createAsyncThunk(\r\n//   \"contacts/deleteContact\",\r\n//   async (id, { rejectWithValue }) => {\r\n//     try {\r\n//       const deleteItem = axios.delete(`/contacts/${id}`);\r\n//       return deleteItem;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   },\r\n// );\r\n\r\nconst addContacts = (item) => (dispatch) => {\r\n  dispatch(action.addItemsRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", item)\r\n    .then(({ data }) => dispatch(action.addItemsSuccess(data)))\r\n    .catch((error) => dispatch(action.addItemsError(error)));\r\n};\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(action.deleteItemsRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(action.deleteItemsSuccess(id)))\r\n    .catch((error) => dispatch(action.deleteItemsError(error)));\r\n};\r\n\r\nconst fetchItems = () => (dispatch) => {\r\n  dispatch(action.fetchItemsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(action.fetchItemsSuccess(data)))\r\n    .catch((error) => dispatch(action.fetchItemsError(error)));\r\n};\r\nexport { addContacts, deleteContact, fetchItems };\r\n","import { useState } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n// import * as action from \"../../redux/action\";\r\nimport { addContacts } from \"../../redux/operation\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputNameChange = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const handleInputTelChange = (event) => {\r\n    setNumber(event.currentTarget.value);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(addContacts({ name, number }));\r\n    // event.target.reset();\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          value={name}\r\n          placeholder=\"Name Surname\"\r\n          onChange={handleInputNameChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Phone number\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          className={s.input}\r\n          placeholder=\"774-333-22\"\r\n          onChange={handleInputTelChange}\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   onSubmit: PropTypes.func,\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   submit: ({ name, tel }) => dispatch(action.addItem({ name, tel })),\r\n// });\r\n// export default connect(null, mapDispatchToProps)(ContactForm);\r\n","// import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nimport * as action from \"../../redux/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilterValue } from \"../../redux/selectors\";\r\nexport default function Filter() {\r\n  const value = useSelector(getFilterValue);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(action.changeFilter(e.target.value))}\r\n        placeholder=\"Find contact...\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string,\r\n//   onChange: PropTypes.func,\r\n// };\r\n// const mapStateToProps = (state) => ({\r\n//   value: state.contacts.filter,\r\n// });\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   change: (e) => dispatch(action.changeFilter(e.target.value)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { useSelector } from \"react-redux\";\r\nimport PhoneList from \"../components/PhoneList/PhoneList\";\r\nimport ContactForm from \"../components/ContactForm/ContactForm\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport { getItems } from \"../redux/selectors\";\r\nexport default function Contacts() {\r\n  const items = useSelector(getItems);\r\n  return (\r\n    <div className=\"container\">\r\n      <ContactForm />\r\n      {items.length > 1 && <Filter />}\r\n      <PhoneList />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}