{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/Login.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Login","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleInputChange","target","name","onSubmit","e","preventDefault","logIn","reset","className","onChange","type","placeholder","required"],"mappings":"sJAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,0HIFvF,SAASC,IACtB,IAAMC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAoB,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMf,EAAc,EAAdA,MAC3C,OAAQe,GACN,IAAK,QACH,OAAOL,EAASV,GAClB,IAAK,WACH,OAAOY,EAAYZ,GAErB,QACE,SAUN,OACE,uBAAMgB,SARiB,SAACC,GACxBA,EAAEC,iBACFZ,EAASa,YAAM,CAAEV,QAAOE,cACxBM,EAAEH,OAAOM,QACTV,EAAS,IACTE,EAAY,KAGsBS,UAAU,OAA5C,UACE,wBAAOA,UAAU,QAAjB,kBAEE,uBACEA,UAAU,QACVC,SAAUT,EACVE,KAAK,QACLQ,KAAK,QACLC,YAAY,iBACZC,UAAQ,OAGZ,wBAAOJ,UAAU,QAAjB,qBAEE,uBACEA,UAAU,QACVC,SAAUT,EACVE,KAAK,WACLQ,KAAK,WACLC,YAAY,WACZC,UAAQ,OAGZ,wBAAQF,KAAK,SAASF,UAAU,SAAhC","file":"static/js/4.fb71433d.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logIn } from \"../auth/auth-operations\";\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(logIn({ email, password }));\r\n    e.target.reset();\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className=\"form\">\r\n      <label className=\"label\">\r\n        Email\r\n        <input\r\n          className=\"input\"\r\n          onChange={handleInputChange}\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"name@gmail.com\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className=\"label\">\r\n        Password\r\n        <input\r\n          className=\"input\"\r\n          onChange={handleInputChange}\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"********\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className=\"button\">\r\n        Log in\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"],"sourceRoot":""}