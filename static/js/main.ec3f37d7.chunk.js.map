{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/PhoneList/PhoneList.module.css","components/Filter/Filter.module.css","components/AppBar/AuthNav.jsx","components/AppBar/Navigation.jsx","auth/auth-selectors.jsx","components/AppBar/UserMenu.jsx","components/AppBar/AppBar.jsx","redux/action.jsx","redux/selectors.jsx","components/PhoneList/PhoneList.jsx","redux/operation.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","views/Contacts.jsx","views/Home.jsx","auth/auth-operations.jsx","views/Registration.jsx","views/Login.jsx","App.js","redux/reducer.jsx","auth/auth-slice.jsx","redux/store.jsx","reportWebVitals.js","index.js"],"names":["module","exports","Navigation","className","to","exact","getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","UserMenu","useSelector","AppBar","console","log","changeFilter","createAction","fetchItemsRequest","fetchItemsSuccess","fetchItemsError","addItemsRequest","addItemsSuccess","addItemsError","deleteItemsRequest","deleteItemsSuccess","deleteItemsError","getFilterValue","contacts","filter","getItems","items","getList","normalizeFilter","toLocaleLowerCase","item","includes","getVisibleContacts","PhoneList","dispatch","useDispatch","list","onDelete","id","action","axios","delete","then","catch","error","deleteContact","useEffect","get","data","s","map","tel","text","number","button","type","onClick","ContactForm","useState","setName","setTel","onSubmit","event","preventDefault","post","form","label","input","value","placeholder","onChange","currentTarget","pattern","required","Filter","e","target","Contacts","length","Home","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","reg","a","message","logIn","login","response","logOut","Registration","email","setEmail","password","setPassword","repPassword","setRepPassword","handleInputChange","alert","reset","Login","App","path","createReducer","actions","_","payload","find","contact","toLowerCase","isLoading","combineReducers","authSlice","createSlice","initialState","extraReducers","fulfilled","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","authReducer","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","concat","logger","devTools","process","persistor","persistStore","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.ec3f37d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Krot\",\"label\":\"ContactForm_label__2JLVl\",\"input\":\"ContactForm_input__3hbUS\",\"button\":\"ContactForm_button__FojeJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"PhoneList_list__3AOs1\",\"button\":\"PhoneList_button__XfxDA\",\"text\":\"PhoneList_text__18G31\",\"number\":\"PhoneList_number__39_nB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__17sxO\",\"label\":\"Filter_label__1qvjN\"};","import { NavLink } from \"react-router-dom\";\r\nexport default function Navigation() {\r\n  return (\r\n    <nav>\r\n      <ul className=\"nav__list\">\r\n        <li className=\"nav__item\">\r\n          <NavLink to=\"/registration\" exact>\r\n            Registration\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/login\" exact>\r\n            Log in\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","import { NavLink } from \"react-router-dom\";\r\nexport default function Navigation() {\r\n  return (\r\n    <nav>\r\n      <ul className=\"nav__list\">\r\n        <li className=\"nav__item\">\r\n          <NavLink to=\"/\">Home</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/contacts\">Contacts</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","const getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\nconst getUserName = (state) => state.auth.user.name;\r\n\r\nexport { getIsLoggedIn, getUserName };\r\n","// import { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\n// import { logOut } from \"../../auth/auth-operations\";\r\nimport { getUserName } from \"../../auth/auth-selectors\";\r\n\r\nexport default function UserMenu() {\r\n  // const dispatch = useDispatch();\r\n  const name = useSelector(getUserName);\r\n  // const handleLogOut = () => dispatch(logOut());\r\n  return (\r\n    <div>\r\n      <p>Welcome : {name}</p>\r\n      {/* <button type=\"button\" onClick={handleLogOut}> */}\r\n      {/* Log out */}\r\n      {/* </button> */}\r\n    </div>\r\n  );\r\n}\r\n","import AuthNav from \"./AuthNav\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getIsLoggedIn } from \"../../auth/auth-selectors\";\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  console.log(isLoggedIn);\r\n  return (\r\n    <header className=\"header\">\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","// import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n// const addItem = createAction(\"items/add\", ({ name, tel }) => ({\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     tel,\r\n//   },\r\n// }));\r\n// const deleteItem = createAction(\"items/delete\");\r\nconst changeFilter = createAction(\"items/filter\");\r\nconst fetchItemsRequest = createAction(\"items/fetchItemsRequest\");\r\nconst fetchItemsSuccess = createAction(\"items/fetchItemsSuccess\");\r\nconst fetchItemsError = createAction(\"items/fetchItemsError\");\r\n\r\nconst addItemsRequest = createAction(\"items/addItemsRequest\");\r\nconst addItemsSuccess = createAction(\"items/addItemsSuccess\");\r\nconst addItemsError = createAction(\"items/addItemsError\");\r\n\r\nconst deleteItemsRequest = createAction(\"items/deleteItemsRequest\");\r\nconst deleteItemsSuccess = createAction(\"items/deleteItemsSuccess\");\r\nconst deleteItemsError = createAction(\"items/deleteItemsError\");\r\n// const addItem = ({ name, tel }) => ({\r\n//   type: actionTypes.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     tel,\r\n//   },\r\n// });\r\n\r\n// const deleteItem = (id) => ({\r\n//   type: actionTypes.DELETE,\r\n//   payload: id,\r\n// });\r\n\r\n// const changeFilter = (value) => ({\r\n//   type: actionTypes.FILTER,\r\n//   payload: value,\r\n// });\r\nexport {\r\n  changeFilter,\r\n  addItemsError,\r\n  addItemsSuccess,\r\n  addItemsRequest,\r\n  deleteItemsError,\r\n  deleteItemsSuccess,\r\n  deleteItemsRequest,\r\n  fetchItemsError,\r\n  fetchItemsRequest,\r\n  fetchItemsSuccess,\r\n};\r\n","// import { createSelector } from \"reselect\";\r\nconst getVisibleContacts = (items, filter) => {\r\n  const normalizeFilter = filter.toLocaleLowerCase();\r\n\r\n  return items.filter((item) =>\r\n    item.name.toLocaleLowerCase().includes(normalizeFilter),\r\n  );\r\n};\r\nexport const getFilterValue = (state) => state.contacts.filter;\r\nexport const getItems = (state) => state.contacts.items;\r\n// export const getVisibleContacts = createSelector(\r\n//   [getItems, getFilterValue],\r\n//   (items, filter) => {\r\n//     const normalizeFilter = filter.toLocaleLowerCase();\r\n\r\n//     return items.filter((item) =>\r\n//       item.name.toLocaleLowerCase().includes(normalizeFilter),\r\n//     );\r\n//   },\r\n// );\r\nexport const getList = (state) =>\r\n  getVisibleContacts(state.contacts.items, state.contacts.filter);\r\n","// import PropTypes from \"prop-types\";\r\nimport s from \"./PhoneList.module.css\";\r\n// import * as action from \"../../redux/action\";\r\nimport { deleteContact, fetchItems } from \"../../redux/operation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getList } from \"../../redux/selectors\";\r\nimport { useEffect } from \"react\";\r\nexport default function PhoneList() {\r\n  const dispatch = useDispatch();\r\n  const list = useSelector(getList);\r\n  const onDelete = (id) => dispatch(deleteContact(id));\r\n  useEffect(() => {\r\n    dispatch(fetchItems());\r\n  }, [dispatch]);\r\n  return (\r\n    <ul className={s.list}>\r\n      {list.map(({ id, name, tel }) => {\r\n        return (\r\n          <li key={id}>\r\n            <p className={s.text}>{name}</p>\r\n            <p className={s.number}>{tel}</p>\r\n            <button\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => onDelete(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n// PhoneList.propTypes = {\r\n//   list: PropTypes.array,\r\n//   onDelete: PropTypes.func,\r\n// };\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { filter, items } = state.contacts;\r\n//   // const { tel, name } = list;\r\n//   // if (\r\n//   //   items.find((contact) => contact.name.toLowerCase() === name.toLowerCase())\r\n//   // ) {\r\n//   //   alert(`${name} is already in contacts.`);\r\n//   // }\r\n//   // if (items.find((contact) => contact.tel === tel)) {\r\n//   //   alert(`${tel} is already in contacts.`);\r\n//   // }\r\n//   const visibleItems = getVisibleContacts(items, filter);\r\n\r\n//   return {\r\n//     list: visibleItems,\r\n//   };\r\n// };\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onDelete: (id) => dispatch(action.deleteItem(id)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(PhoneList);\r\n","import * as action from \"./action\";\r\nimport axios from \"axios\";\r\n// import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n// const fetchItems = createAsyncThunk(\r\n//   \"contacts\",\r\n//   async (_, { rejectWithValue }) => {\r\n//     try {\r\n//       const { data } = axios.get(\"/contacts\");\r\n//       return data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   },\r\n// );\r\n\r\n// const addContacts = createAsyncThunk(\r\n//   \"contacts/addContacts\",\r\n//   async ({ name, tel }, { rejectWithValue }) => {\r\n//     try {\r\n//       const item = {\r\n//         name,\r\n//         tel,\r\n//       };\r\n//       const { data } = axios.post(\"/contacts\", item);\r\n//       return data;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   },\r\n// );\r\n\r\n// const deleteContact = createAsyncThunk(\r\n//   \"contacts/deleteContact\",\r\n//   async (id, { rejectWithValue }) => {\r\n//     try {\r\n//       const deleteItem = axios.delete(`/contacts/${id}`);\r\n//       return deleteItem;\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   },\r\n// );\r\n\r\nconst addContacts = (item) => (dispatch) => {\r\n  dispatch(action.addItemsRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", item)\r\n    .then(({ data }) => dispatch(action.addItemsSuccess(data)))\r\n    .catch((error) => dispatch(action.addItemsError(error)));\r\n};\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(action.deleteItemsRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(action.deleteItemsSuccess(id)))\r\n    .catch((error) => dispatch(action.deleteItemsError(error)));\r\n};\r\n\r\nconst fetchItems = () => (dispatch) => {\r\n  dispatch(action.fetchItemsRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(action.fetchItemsSuccess(data)))\r\n    .catch((error) => dispatch(action.fetchItemsError(error)));\r\n};\r\nexport { addContacts, deleteContact, fetchItems };\r\n","import { useState } from \"react\";\r\n// import PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n// import * as action from \"../../redux/action\";\r\nimport { addContacts } from \"../../redux/operation\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [tel, setTel] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInputNameChange = (event) => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n  const handleInputTelChange = (event) => {\r\n    setTel(event.currentTarget.value);\r\n  };\r\n\r\n  const handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(addContacts({ name, tel }));\r\n    // event.target.reset();\r\n    setName(\"\");\r\n    setTel(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          value={name}\r\n          placeholder=\"Name Surname\"\r\n          onChange={handleInputNameChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Tel\r\n        <input\r\n          type=\"tel\"\r\n          name=\"tel\"\r\n          className={s.input}\r\n          placeholder=\"774-333-22\"\r\n          onChange={handleInputTelChange}\r\n          value={tel}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   onSubmit: PropTypes.func,\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   submit: ({ name, tel }) => dispatch(action.addItem({ name, tel })),\r\n// });\r\n// export default connect(null, mapDispatchToProps)(ContactForm);\r\n","// import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nimport * as action from \"../../redux/action\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilterValue } from \"../../redux/selectors\";\r\nexport default function Filter() {\r\n  const value = useSelector(getFilterValue);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => dispatch(action.changeFilter(e.target.value))}\r\n        placeholder=\"Find contact...\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string,\r\n//   onChange: PropTypes.func,\r\n// };\r\n// const mapStateToProps = (state) => ({\r\n//   value: state.contacts.filter,\r\n// });\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   change: (e) => dispatch(action.changeFilter(e.target.value)),\r\n// });\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { useSelector } from \"react-redux\";\r\nimport PhoneList from \"../components/PhoneList/PhoneList\";\r\nimport ContactForm from \"../components/ContactForm/ContactForm\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport { getItems } from \"../redux/selectors\";\r\nexport default function Contacts() {\r\n  const items = useSelector(getItems);\r\n  return (\r\n    <div className=\"container\">\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      {items.length > 1 && <Filter />}\r\n      <PhoneList />\r\n    </div>\r\n  );\r\n}\r\n","export default function Home() {\r\n  return <div>This is home page</div>;\r\n}\r\n","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com/\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\nconst register = createAsyncThunk(\"auth/register\", async (reg) => {\r\n  try {\r\n    const { data } = await axios.post(\"users/signup\", reg);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk(\"auth/login\", async (login) => {\r\n  try {\r\n    console.log(login);\r\n    const response = await axios.post(\"users/login\", login);\r\n    token.set(response.data.token);\r\n    return response.data;\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n});\r\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\r\n  try {\r\n    const a = await axios.post(\"users/logout\");\r\n    token.unset();\r\n    return a;\r\n  } catch (error) {\r\n    return error.message;\r\n  }\r\n});\r\nexport { register, logIn, logOut };\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { register } from \"../auth/auth-operations\";\r\nexport default function Registration() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [repPassword, setRepPassword] = useState(\"\");\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      case \"repPassword\":\r\n        return setRepPassword(value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== repPassword) {\r\n      return alert(\"Пароль не совпадает\");\r\n    }\r\n    dispatch(register({ name, email, password }));\r\n    e.target.reset();\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setRepPassword(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <label>\r\n        Name\r\n        <input onChange={handleInputChange} type=\"text\" name=\"name\" />\r\n      </label>\r\n      <label>\r\n        Email\r\n        <input onChange={handleInputChange} type=\"email\" name=\"email\" />\r\n      </label>\r\n      <label>\r\n        Password\r\n        <input onChange={handleInputChange} type=\"password\" name=\"password\" />\r\n      </label>\r\n      <label>\r\n        Repeat password\r\n        <input\r\n          onChange={handleInputChange}\r\n          type=\"password\"\r\n          name=\"repPassword\"\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Registration</button>\r\n    </form>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logIn } from \"../auth/auth-operations\";\r\nexport default function Login() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(logIn({ email, password }));\r\n    e.target.reset();\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <label>\r\n        Email\r\n        <input onChange={handleInputChange} name=\"email\" type=\"email\" />\r\n      </label>\r\n      <label>\r\n        Password\r\n        <input onChange={handleInputChange} name=\"password\" type=\"password\" />\r\n      </label>\r\n      <button type=\"submit\">Log in</button>\r\n    </form>\r\n  );\r\n}\r\n","import \"./index.css\";\nimport AppBar from \"./components/AppBar/AppBar\";\nimport Contacts from \"./views/Contacts\";\nimport Home from \"./views/Home\";\nimport Registration from \"./views/Registration\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"./views/Login\";\n\nfunction App() {\n  return (\n    <>\n      <AppBar />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n\n        <Route path=\"/contacts\">\n          <Contacts />\n        </Route>\n        <Route path=\"/registration\">\n          <Registration />\n        </Route>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n      </Switch>\n    </>\n  );\n}\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"./action\";\r\nconst items = createReducer([], {\r\n  [actions.fetchItemsSuccess]: (_, { payload }) => payload,\r\n  [actions.addItemsSuccess]: (state, { payload }) => {\r\n    if (\r\n      state.find(\r\n        (contact) => contact.name.toLowerCase() === payload.name.toLowerCase(),\r\n      )\r\n    ) {\r\n      alert(`${payload.name} is already in contacts.`);\r\n    } else if (state.find((contact) => contact.tel === payload.tel)) {\r\n      alert(`${payload.tel} is already in contacts.`);\r\n    } else {\r\n      return [...state, payload];\r\n    }\r\n  },\r\n  [actions.deleteItemsSuccess]: (state, { payload }) =>\r\n    state.filter((item) => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n// const entities = createReducer([], {\r\n//   [actions.fetchItemsSuccess]: (_, action) => action.payload,\r\n// });\r\nconst isLoading = createReducer(false, {\r\n  [actions.addItemsRequest]: () => true,\r\n  [actions.addItemsSuccess]: () => false,\r\n  [actions.addItemsError]: () => false,\r\n  [actions.deleteItemsRequest]: () => true,\r\n  [actions.deleteItemsSuccess]: () => false,\r\n  [actions.deleteItemsError]: () => false,\r\n});\r\n// export default combineReducers({\r\n//   entities,\r\n//   isLoading\r\n// })\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.ADD:\r\n//       if (\r\n//         state.find(\r\n//           (contact) =>\r\n//             contact.name.toLowerCase() === payload.name.toLowerCase(),\r\n//         )\r\n//       ) {\r\n//         alert(`${payload.name} is already in contacts.`);\r\n//       }\r\n//       if (state.find((contact) => contact.tel === payload.tel)) {\r\n//         alert(`${payload.tel} is already in contacts.`);\r\n//       }\r\n//       return [...state, payload];\r\n\r\n//     case actionTypes.DELETE:\r\n//       return state.filter((item) => item.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case actionTypes.FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n});\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { register, logIn, logOut } from \"./auth-operations\";\r\nconst initialState = {\r\n  user: { name: \"\", email: \"\" },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [register.fulfilled](state, { payload }) {\r\n      state.user = payload.user;\r\n      state.token = payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [logOut.fulfilled](state) {\r\n      state.user = { name: \"\", email: \"\" };\r\n      state.token = null;\r\n      state.isLoggedIn = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import contactsReducer from \"./reducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\nimport authReducer from \"../auth/auth-slice\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nconst persistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\nconst persistedReducer = persistReducer(persistConfig, authReducer);\r\n\r\n// const store = createStore(reducer, composeWithDevTools());\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistedReducer,\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nexport { store, persistor };\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport * as store from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}